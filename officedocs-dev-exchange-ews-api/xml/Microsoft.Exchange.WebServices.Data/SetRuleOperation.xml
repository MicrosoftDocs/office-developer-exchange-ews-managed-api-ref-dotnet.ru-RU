<Type Name="SetRuleOperation" FullName="Microsoft.Exchange.WebServices.Data.SetRuleOperation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d0e443d67b3d140804bb8b2ba78919c13491dd3" />
    <Meta Name="ms.sourcegitcommit" Value="f9542e83f8de0b81ad3168ccc4bf48004e4e2e94" />
    <Meta Name="ms.translationtype" Value="MT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/19/2018" />
    <Meta Name="ms.locfileid" Value="20626545" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SetRuleOperation : Microsoft.Exchange.WebServices.Data.RuleOperation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SetRuleOperation extends Microsoft.Exchange.WebServices.Data.RuleOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Exchange.WebServices.Data.SetRuleOperation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SetRuleOperation&#xA;Inherits RuleOperation" />
  <TypeSignature Language="C++ CLI" Value="public ref class SetRuleOperation sealed : Microsoft::Exchange::WebServices::Data::RuleOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Exchange.WebServices.Data.RuleOperation</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b2af0-101">Представляет операцию, чтобы обновить правила папки «Входящие».</span>
      <span class="sxs-lookup">
        <span data-stu-id="b2af0-101">Represents an operation to update an Inbox rule.</span>
      </span>
    </summary>
    <remarks>
      <span data-ttu-id="b2af0-102">
        <para>Этот класс можно использовать для обновления условия и действия существующего правила.</para>
        <para>Этот класс является производным от <see cref="T:Microsoft.Exchange.WebServices.Data.RuleOperation" /> класса.</para>
        <para>При создании правила, он хранится на сервере Exchange. При поступлении сообщения на сервере Exchange оценивает сообщение и определяет ли он выполнил любые условия правила. Этот класс позволяет изменять условия или действия правила.</para>
        <para />
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="b2af0-102">
          <para>You can use this class to update the conditions and actions of an existing rule. </para>
          <para>This class derives from the <see cref="T:Microsoft.Exchange.WebServices.Data.RuleOperation" /> class.</para>
          <para>When a rule is created, it is stored on the Exchange server. When a message arrives, the Exchange server evaluates the message and determines whether it has fulfilled any rule conditions. This class enables you to change the conditions or actions  of a rule.</para>
          <para />
        </span>
      </span>
    </remarks>
    <example>
      <span data-ttu-id="b2af0-103">
        <para>В следующем примере выполняется поиск <see cref="T:Microsoft.Exchange.WebServices.Data.RuleCollection" /> класс для поиска существующего правила с именем «MoveInterestingToJunk» из почтового ящика пользователя. Если существует правило, <see cref="P:Microsoft.Exchange.WebServices.Data.Rule.Conditions" /> изменить свойства. <see cref="P:Microsoft.Exchange.WebServices.Data.Rule.Conditions" /> Свойство удаляется существующий фильтр строку темы и применяет новые <see cref="P:Microsoft.Exchange.WebServices.Data.Rule.Conditions" /> свойство, которое указывает, что каждый раз, когда сообщение электронной почты поступает, который имеет строка «Эту является нежелательной» в теме сообщения, Exchange server для использования существующего действия. Правило загружается на сервер при службу. Строка UpdateInboxRules (new RuleOperation [] {setRuleOperation} значение true) выполняется.</para>
        <code>// Modify the "MoveInterestingToJunk" rule, if it exists.
// Get the RuleCollection.
RuleCollection ruleCollection = service.GetInboxRules("User1@Contoso.com");
foreach (Rule ruleinCollection in ruleCollection)
{
    if (ruleinCollection.DisplayName == "MoveInterestingToJunk")
    {
        ruleinCollection.Conditions.ContainsSubjectStrings.Clear();
        ruleinCollection.Conditions.ContainsSubjectStrings.Add("This is Junk");
        SetRuleOperation setRuleOperation = new SetRuleOperation(ruleinCollection);
        service.UpdateInboxRules(new RuleOperation[] { setRuleOperation }, true);
    }
}</code>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="b2af0-103">
          <para>The following example searches the <see cref="T:Microsoft.Exchange.WebServices.Data.RuleCollection" /> class to find an existing rule with the name "MoveInterestingToJunk" from the user's mailbox. If the rule exists, the <see cref="P:Microsoft.Exchange.WebServices.Data.Rule.Conditions" /> properties are changed. The <see cref="P:Microsoft.Exchange.WebServices.Data.Rule.Conditions" /> property removes the existing subject string filter and applies the new <see cref="P:Microsoft.Exchange.WebServices.Data.Rule.Conditions" /> property that specifies that whenever an e-mail message arrives that has a string of "This is Junk" in the subject, the Exchange server is to take the existing actions. The rule is uploaded to the server when the service.UpdateInboxRules(new RuleOperation[] { setRuleOperation }, true) line is executed.</para>
          <code>// Modify the "MoveInterestingToJunk" rule, if it exists.
// Get the RuleCollection.
RuleCollection ruleCollection = service.GetInboxRules("User1@Contoso.com");
foreach (Rule ruleinCollection in ruleCollection)
{
    if (ruleinCollection.DisplayName == "MoveInterestingToJunk")
    {
        ruleinCollection.Conditions.ContainsSubjectStrings.Clear();
        ruleinCollection.Conditions.ContainsSubjectStrings.Add("This is Junk");
        SetRuleOperation setRuleOperation = new SetRuleOperation(ruleinCollection);
        service.UpdateInboxRules(new RuleOperation[] { setRuleOperation }, true);
    }
}</code>
        </span>
      </span>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SetRuleOperation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Exchange.WebServices.Data.SetRuleOperation.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SetRuleOperation();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b2af0-104">Инициализирует новый экземпляр класса SetRuleOperation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2af0-104">Initializes a new instance of the SetRuleOperation class.</span>
          </span>
        </summary>
        <remarks>
          <span data-ttu-id="b2af0-105">
            <para>Обновляет правила в определенного почтового ящика.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b2af0-105">
              <para>Updates a rule in a specific mailbox.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SetRuleOperation (Microsoft.Exchange.WebServices.Data.Rule rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Exchange.WebServices.Data.Rule rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Exchange.WebServices.Data.SetRuleOperation.#ctor(Microsoft.Exchange.WebServices.Data.Rule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SetRuleOperation(Microsoft::Exchange::WebServices::Data::Rule ^ rule);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rule" Type="Microsoft.Exchange.WebServices.Data.Rule" />
      </Parameters>
      <Docs>
        <param name="rule">
          <span data-ttu-id="b2af0-106">Правило будет обновляться и отправляются на сервер обмена сообщениями.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2af0-106">The rule to be updated and sent to the messaging server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b2af0-107">Инициализирует новый экземпляр класса SetRuleOperation с данным правилом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2af0-107">Initializes a new instance of the SetRuleOperation class with the specified rule.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rule">
      <MemberSignature Language="C#" Value="public Microsoft.Exchange.WebServices.Data.Rule Rule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Exchange.WebServices.Data.Rule Rule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Exchange.WebServices.Data.SetRuleOperation.Rule" />
      <MemberSignature Language="VB.NET" Value="Public Property Rule As Rule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Exchange::WebServices::Data::Rule ^ Rule { Microsoft::Exchange::WebServices::Data::Rule ^ get(); void set(Microsoft::Exchange::WebServices::Data::Rule ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Exchange.WebServices</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Exchange.WebServices.Data.Rule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b2af0-108">Получает или задает правило, который требуется обновить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2af0-108">Gets or sets the rule to be updated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b2af0-109">Правила, который требуется обновить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b2af0-109">The rule to be updated.</span>
          </span>
        </value>
        <remarks>
          <span data-ttu-id="b2af0-110">
            <para>Правило содержит условия и действия, предпринимаемые при поступлении сообщения электронной почты в почтовом ящике.</para>
            <para />
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="b2af0-110">
              <para>The rule contains the conditions and actions to be taken when an e-mail message arrives in a mailbox.</para>
              <para />
            </span>
          </span>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>